tools:
#   - name: echo_hello
#     description: "echo hello"
#     alias: "echo-hello"
#     image: "alpine"
#     content: |
#       echo hello

#   - name: gcp-command
#     description: "run gcp commands"
#     alias: "gcp-command"
#     image: "google/cloud-sdk"
#     content: |
#       echo $GCLOUD
#       echo "========"
#       echo $GCLOUD | base64 --decode > /root/service_acct_key
#       cat /root/service_acct_key
#       gcloud auth login --cred-file=/root/service_acct_key
#       gcloud {{.command}}

#     args:
#       - name: command
#         description: 'command to run via gcloud CLI'
#         required: True
#     secrets:
#       - "GCLOUD"

#   - name: aws-s3-list
#     description: "List S3 buckets using AWS CLI"
#     alias: "awss3list"
#     image: "amazon/aws-cli"
#     content: |
#       aws s3 ls
#     args: []
#     env:
#       - "AWS_ACCESS_KEY_ID"
#       - "AWS_SECRET_ACCESS_KEY"
#       - "AWS_DEFAULT_REGION"
#       - "AWS_SESSION_TOKEN"

#   - name: aws-list-secrets
#     description: "List S3 secret manager secrets using AWS CLI"
#     alias: "awslistsecrets"
#     image: "amazon/aws-cli"
#     content: |
#       aws secretsmanager list-secrets --max-items {{ .max_items }}
#     args:
#       - name: max_items
#         description: 'Maximum number of items to list'
#         required: false
#     env:
#       - "AWS_ACCESS_KEY_ID"
#       - "AWS_SECRET_ACCESS_KEY"
#       - "AWS_DEFAULT_REGION"
#       - "AWS_SESSION_TOKEN"

#   - name: aws-s3-file-creds
#     description: "List S3 buckets using AWS CLI"
#     alias: "awss3listfile"
#     image: "amazon/aws-cli"
#     content: |
#       echo "starting\n"
#       export AWS_PROFILE={{ .aws_profile }}
#       aws s3 ls
#       echo "\nended"
#     args: []
#     with_files:
#       - source: $HOME/.aws/credentials
#         destination: /root/.aws/credentials
#       - source: $HOME/.aws/config
#         destination: /root/.aws/config
#     args:
#       - name: aws_profile
#         description: 'The aws profile to use'
#         required: true
#     # env:
#     #   - "AWS_PROFILE"


#   - name: cat-file
#     description: "cat file"
#     alias: "cat-file"
#     image: "alpine:20240807"
#     content: |
#       cat /tmp/bla.txt
#     args: []
#     with_files:
#       - source: $HOME/bla.txt
#         destination: /tmp/bla.txt

  # - name: list-env
  #   description: "This tool lists all the env vars"
  #   alias: "listenv"
  #   image: "alpine:3.20"
  #   content: |
  #     env
  #   secrets:
  #     - "TOP_SECRET"
      # - "GH_TOKEN"
#     #   - "TEST1"
#     #   - "TEST2"
#     #   - "JFROG_ACCESS_TOKEN"
#     #   - "SLACK_THREAD_TS"
#     #   - "SLACK_CHANNEL_ID"

#     secrets:
#       - "JIRA_OAUTH_TOKEN"
#       - "GH_TOKEN"
#       - "SLACK_API_TOKEN"

  # - name: python-timeout-sleep
  #   description: "This tool test timeout events"
  #   alias: "timeout"
  #   type: python
  #   content: |
  #     import time
  #     time.sleep({{ .sleep_in_sec }})
  #     print("bla", flush=True)

  #   args:
  #     - name: sleep_in_sec
  #       description: 'the number to sleep'
  #       required: true

  # - name: python-print-sheesh
  #   description: "This tool prints 'shhhesss' multiple times"
  #   alias: "shhhesss"
  #   type: python
  #   type: python
  #   content: |
  #     for _ in range({{ .count }}):
  #         print("shhhesss", flush=True)
  
  #   args:
  #     - name: count
  #       description: 'the number of times to print shhhesss'
  #       required: true

  - name: error-tool
    description: "This tool through an error"
    alias: "error tool"
    type: alpine
    content: |
     echo "This is an error message" >&2
     exit 1
  - name: two-args
    description: "This tool is just tesst tool for two args"
    alias: "twoargs"
    type: alpine
    args:
      - name: x
        description: 'x'
        required: true
      - name: y
        description: 'y'
        required: true
    content: |
     echo "This is a test for two args" >&2
     exit 1
     
#   - name: print-bash
#     description: "This tool uses bash to print x number of events"
#     alias: "listenv"
#     image: "amazon/aws-cli"
#     content: |
#       for ((i=1; i<={{ .number_of_times }}; i++)); do echo "sheeesh"; sleep 5; done; echo "Done!"
#     args:
#       - name: number_of_times
#         description: 'number of times to print sheeesh'
#         required: false
#     long_running: true
